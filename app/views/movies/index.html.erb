<div id='movie_filters' class='well'>
  <form id="filter_search_form">
    <input type="text" class="input-medium search-query" placeholder="Search...">
  </form>
  <%# Filled dynamically via Backbone.js %>
</div>

<div id='movie_index'>
  <%# Filled dynamically via Backbone.js using the 'search' controller %>
</div>

<br class='clearfix'/>


<% if current_user %>
  <%= link_to 'New Movie', new_movie_path, :class => 'btn btn-primary' %>
<% end %>

<div class="pagination">
  <ul id='pagination-list'>
    <%# Filled dynamically via Backbone.js %>
  </ul>
</div>


<script type="text/template" id="movie_template">
  <a href='movies/{{= id }}'>
    <div class='movie_thumbnail'>
      {{ if(image_url) { }}
      <img src='{{{= image_url }}}' width='140' height='200'>
      {{ } }}
    </div>
    
    <div class='movie_title'>
      {{{= title }}}
    </div>
  </a>
  
  <div class='movie_score'>
    {{= star_display(score_class) }}
  </div>
</script>

<script type="text/template" id="filter_template">
  {{ for(var i=0; i<labels.length; i++) { }}
    {{ var val = labels[i]['value'] }}
    {{ var cl = (val == active_value ? "filter active" : "filter" )}}
    <li data-id="{{{= val }}}" class="{{{= cl }}}">
      {{{= labels[i]['name'] }}}
      {{ if(active_value<0 && i>0) { }}
        <span class="badge">{{{= labels[i]['facet_count'] || 0 }}}</span>
      {{ } }}
    </li>
  {{ } }}
</script>

<script type="text/template" id="paginator_template">
  {{ var c = (current_page > 0 ? "" : "disabled"); }}
  <li data-id="previous" class={{= c }}><a href="#">Prev</a></li>
  {{ for(var i=0; i<number_of_pages; i++) { }}
    {{ var c = (current_page === i ? "active" : ""); }}
    <li data-id={{= i }} class={{= c }}><a href="#">{{= i+1 }}</a></li>
  {{ } }}
  {{ var c = (current_page < number_of_pages-1 ? "" : "disabled"); }}
  <li data-id="next" class={{= c }}><a href="#">Next</a></li>
</script>

<%= javascript_include_tag "application" %>

<script>
  // ------------------------ launch application ------------------------

  // set up filters (since they are fixed)
  var filters = new app.FilterList();
  // Add category filter
  filters.add( new app.Filter({
    'query_key': 'category',
    'labels': [
      {'name': 'All genres', 'value': -1},
      {'name': 'Action', 'value': 0},
      {'name': 'Drama', 'value': 1},
      {'name': 'Fantasy/Sci-Fi', 'value': 2},
      {'name': 'Comedy', 'value': 3},
      {'name': 'Horror', 'value': 4}
    ]
    })
  );
  // Add filter according to year of release
  filters.add( new app.Filter({
    'query_key': 'year',
    'labels': [
      {'name': 'All years', 'value': -1},
      {'name': '2011', 'value': 2011},
      {'name': '2012', 'value': 2012},
      {'name': '2013', 'value': 2013}
    ]
    })
  );
  // Add filter according to score class
  filters.add( new app.Filter({
    'query_key': 'score',
    'labels': [
      {'name': 'All scores', 'value': -1},
      {'name': '3 stars', 'value': 3},
      {'name': '4 stars', 'value': 4},
      {'name': '5 stars', 'value': 5}
    ]
    })
  );
  var PageBar = new app.PaginatorView();
  var CinemaFilters = new app.FilterSectionView(filters);
  
  var CinemaDB = new app.AppView();
  var SearchBar = new app.Search();
  var Dispatcher = new app.EventDispatcher(CinemaDB, CinemaFilters, SearchBar, PageBar);
  CinemaDB.render();
</script>
